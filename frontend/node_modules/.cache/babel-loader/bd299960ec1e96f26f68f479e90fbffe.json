{"ast":null,"code":"var _jsxFileName = \"E:\\\\socket_io\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:5000\");\nconst userName = nanoid(4);\n\nfunction App() {\n  _s();\n\n  const [message, setMessage] = useState(\"\");\n  const [chat, setChat] = useState([]);\n\n  const sendChat = e => {\n    e.preventDefault();\n    socket.emit(\"chat\", {\n      message,\n      userName\n    });\n    setMessage(\"\");\n  };\n\n  useEffect(() => {\n    socket.on(\"chat\", payload => {\n      setChat([...chat, payload]);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chatttyyy \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), chat.map((payload, index) => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [payload.message, \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"id: \", userName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendChat,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"chat\",\n          placeholder: \"send text\",\n          value: message,\n          onChange: e => {\n            setMessage(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"wtsVqqyDD4r5L0iimIoIo+44xEY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/socket_io/frontend/src/App.js"],"names":["useState","useEffect","io","nanoid","socket","connect","userName","App","message","setMessage","chat","setChat","sendChat","e","preventDefault","emit","on","payload","map","index","target","value"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,MAAMC,MAAM,GAAGF,EAAE,CAACG,OAAH,CAAW,uBAAX,CAAf;AACA,MAAMC,QAAQ,GAAGH,MAAM,CAAC,CAAD,CAAvB;;AAEA,SAASI,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMY,QAAQ,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACAV,IAAAA,MAAM,CAACW,IAAP,CAAY,MAAZ,EAAoB;AAAEP,MAAAA,OAAF;AAAWF,MAAAA;AAAX,KAApB;AACAG,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAJD;;AAMAR,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,MAAM,CAACY,EAAP,CAAU,MAAV,EAAmBC,OAAD,IAAa;AAC7BN,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUO,OAAV,CAAD,CAAP;AACD,KAFD;AAGD,GAJQ,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGP,IAAI,CAACQ,GAAL,CAAS,CAACD,OAAD,EAAUE,KAAV,KAAoB;AAC5B,4BACE;AAAA,qBACGF,OAAO,CAACT,OADX,oBACoB;AAAA,+BAAWF,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA,kBADpB;AAAA,WAAQa,KAAR;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OANA,CAFH,eASE;AAAM,QAAA,QAAQ,EAAEP,QAAhB;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,WAAW,EAAC,WAHd;AAIE,UAAA,KAAK,EAAEJ,OAJT;AAKE,UAAA,QAAQ,EAAGK,CAAD,IAAO;AACfJ,YAAAA,UAAU,CAACI,CAAC,CAACO,MAAF,CAASC,KAAV,CAAV;AACD;AAPH;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GA1CQd,G;;KAAAA,G;AA4CT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { nanoid } from \"nanoid\";\n\nconst socket = io.connect(\"http://localhost:5000\");\nconst userName = nanoid(4);\n\nfunction App() {\n  const [message, setMessage] = useState(\"\");\n  const [chat, setChat] = useState([]);\n\n  const sendChat = (e) => {\n    e.preventDefault();\n    socket.emit(\"chat\", { message, userName });\n    setMessage(\"\");\n  };\n\n  useEffect(() => {\n    socket.on(\"chat\", (payload) => {\n      setChat([...chat, payload]);\n    });\n  });\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Chatttyyy </h1>\n        {chat.map((payload, index) => {\n          return (\n            <p key={index}>\n              {payload.message}:<span>id: {userName}</span>\n            </p>\n          );\n        })}\n        <form onSubmit={sendChat}>\n          <input\n            type=\"text\"\n            name=\"chat\"\n            placeholder=\"send text\"\n            value={message}\n            onChange={(e) => {\n              setMessage(e.target.value);\n            }}\n          />\n          <button type=\"submit\">Send</button>\n        </form>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}